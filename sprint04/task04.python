#Your task is to write a program which allows teachers to create a multiple choice test in a class called Testpaper
#and to be also able to assign a minimum pass mark. The testpaper's subject should also be included. The attributes are in the following order:

#1. subject
#2. markscheme
#3. pass_mark
#As well as that, we need to create student objects to take the test itself! Create another class called Student and do the following:

#Create an attribute called tests_taken and set the default as  'No tests taken'.
#Make a method called take_test(), which takes in the testpaper object they are completing and the student's answers. 
#Compare what they wrote to the mark scheme, and append to the/create a dictionary assigned to tests_taken in the way as shown in the point below.
#Each key in the dictionary should be the testpaper subject and each value should be a string in the format seen in the examples below 
#(whether or not the student has failed, and their percentage in brackets).
class Testpaper:
    def __init__(self, subject, markscheme, pass_mark):
        self.subject = subject
        self.markscheme = markscheme
        self.pass_mark = pass_mark

class Student:
    def __init__(self, tests_taken = "No tests taken"):
            self.tests_taken = tests_taken


    def take_test(self, paper, list_of_marks):
        if self.tests_taken == "No tests taken":
            self.tests_taken = {}
        count = 0
        for item in list_of_marks:
            if item in paper.markscheme:
                count += 1
        mark = round(count / len(list_of_marks) * 100)
        self.tests_taken[paper.subject] = f"Passed! ({mark}%)" if mark >= int(paper.pass_mark[:2]) else f"Failed! ({mark}%)"
        return self.tests_taken
