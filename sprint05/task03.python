#Write  the function check_number_group(number) whose input parameter is a number. The function checks whether the  set number is more than number 10:

#in case the number is more than 10 the function should be displayed the corresponding message - "Number of your group input parameter of function is valid";
#in case the number is less than or equal to 10 the function should be raised the exception of your own class ToSmallNumberGroupError and displayed the corresponding message - "We obtain error: Number of your group can't be less than 10";
#in the case of incorrect data the function should be displayed the message - "You entered incorrect data. Please try again."

import re 
class CustomError(Exception):
    def __init__(self, data):
        self.data = data
        
class ToSmallNumberGroupError(Exception):
    def __init__(self, data):
        self.data = data

def check_number_group(number):
    try:
        if not re.match(r'\d*[-.+]?\d$', str(number)):
            raise CustomError("You entered incorrect data. Please try again.")
        elif int(number) > 10:
            return f"Number of your group {number} is valid"
        elif float(number) <= 10:
            raise ToSmallNumberGroupError("We obtain error:Number of your group can't be less than 10")
    except (ToSmallNumberGroupError, CustomError) as e:
        return e.data
