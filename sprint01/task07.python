#Nicky and Dev work in a company where each member is given his income in the form of points. On Nicky's birthday, Dev decided to give some of his points as a gift. The number of points Dev is gifting is the total number of visible zeros visible in the string representation of the N points he received this month.

#Let's say that Nicky got M points from Dev. By the company law, if M is even and greater than 0, Nicky must give one point to the company. If M is odd, the company gives Nicky one additional point.

#Given the number of points N Dev received this month, calculate the number of points Nicky will receive as a gift and return this number in its binary form.

#Note: visible zeros are calculated as follows:

#0, 6 and 9 contain 1 visible zero each;
#8 contains 2 visible zeros;
#other digits do not contain visible zeros.
def Cipher_Zeroes(N):
    b = 0
    for dig in str(N):
        if dig in {"0","6","9"}:
            b += 1
        elif dig == "8":
            b += 2
    if b%2 == 0 and b>0:
        b-=1
    elif b%2 == 1:
        b+=1
    return str(bin(b)[2:])
